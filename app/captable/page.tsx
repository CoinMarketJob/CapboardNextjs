'use client'
import Head from 'next/head';
import styles from './CapTable.module.css';
import { useState, useEffect } from 'react';
import EquityPlansList from '../components/CaptableComponent/EquityPlansList';

export default function Home() {
    const [onlyTotals, setOnlyTotals] = useState(false);
    const [plans, setPlans] = useState([]);

    const [totalShares, setTotalShares] = useState(0);


    const handleToggle = () => {
        setOnlyTotals(!onlyTotals);
    };

    useEffect(() => {
        async function fetchData() {
            try {
                const response = await fetch('/api/pool/get');
                const data = await response.json();
                console.log(data);
                setPlans(data);
            } catch (error) {
                console.error('Veri getirme hatası:', error);
            }
        }

        fetchData();
    }, []);

    useEffect(() => {
        if(Array.isArray(plans)){
            const filteredData = plans.map(plan => ({
                ...plan,
                transactions: plan.transactions.filter(
                  transaction =>
                    transaction.type === "PoolCreation" ||
                    transaction.type === "PoolIncrease" ||
                    transaction.type === "PoolDecrease"
                )
              }));
              
              const totals = filteredData.map(plan => {
                const total = plan.transactions.reduce((acc, transaction) => {
                  if (transaction.type === "PoolCreation" || transaction.type === "PoolIncrease") {
                    return acc + transaction.amount;
                  } else if (transaction.type === "PoolDecrease") {
                    return acc - transaction.amount;
                  } else {
                    return acc; // Diğer transaction tipleri için toplamı değiştirme
                  }
                }, 0);
              
                return {
                  planId: plan.id,
                  poolName: plan.poolName,
                  total,
                };
              });
              console.log(totals); 
          
              setTotalShares(Array.isArray(totals) ? totals.reduce((accumulator, item) => accumulator + item.total, 0) : 0);
    
        }
    }, [plans])

    return (
        <div className={styles.container}>
            <Head>
                <title>Cap Table Page</title>
                <meta name="description" content="Generated by create next app" />
            </Head>

            <main className={styles.main}>
                <div className={styles.header}>
                    <div className={styles.dropdown}>
                        <select>
                            <option>Latest cap table</option>
                        </select>
                    </div>
                    <div className={styles.dateInput}>
                        <input type="text" value="07.06.2024" readOnly />
                    </div>
                    <div className={styles.buttons}>
                        <button>Edit</button>
                    </div>
                    <div className={styles.select}>
                        <select>
                            <option>Share</option>
                            <option>via mail</option>
                            <option>export to excel</option>
                        </select>
                    </div>
                </div>

                <div className={styles.stats}>
                    <div className={styles.statItem}>
                        <div>Fully Diluted Shares</div>
                        <div>{totalShares}</div>
                        <div>0 shareholders</div>
                    </div>
                    <div className={styles.statItem}>
                        <div>Price Per Share</div>
                        <div>TRY 0.0</div>
                        <div>-</div>
                    </div>
                    <div className={styles.statItem}>
                        <div>Company Valuation</div>
                        <div>TRY 0.0</div>
                        <div>-</div>
                    </div>
                    <div className={styles.statItem}>
                        <div>Raised Capital</div>
                        <div>TRY 0.0</div>
                        <div>TRY 0 in convertibles included</div>
                    </div>
                </div>

                <div className={styles.tableHeader}>
                    <h3>CapTable per shareholder</h3>
                    <div className={styles.searchContainer}>
                        <input type="text" placeholder="search" className={styles.searchInput} />
                        <div className={styles.toggleContainer}>
                            <label className={styles.switch}>
                                <input type="checkbox" checked={onlyTotals} onChange={handleToggle} />
                                <span className={styles.slider}></span>
                            </label>
                            <span>Only totals</span>
                        </div>
                    </div>
                </div>

                <div className={styles.table}>
                    <div className={styles.tableRow}>
                        <div className={styles.tableCell}>Name</div>
                        <div className={styles.tableCell}>Fully Diluted Shares</div>
                        <div className={styles.tableCell}>Not Diluted Shares</div>
                        <div className={styles.tableCell}>Not Diluted(%)</div>
                        <div className={styles.tableCell}>Fully Diluted(%)</div>
                        <div className={styles.tableCell}>Investment</div>
                    </div>
                    <EquityPlansList data={plans} />
                </div>
            </main>
        </div>
    );
}
