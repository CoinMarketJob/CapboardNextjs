'use client'
import Head from 'next/head';
import { useState, useEffect } from 'react';
import styles from './share.module.css';

export default function Home() {
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [isNotesOpen, setIsNotesOpen] = useState(false);
  const [name, setName] = useState("");
  const [nominalPrice, setNominalPrice] = useState("");
  const [note, setNote] = useState("");
  const [shareClasses, setShareClasses] = useState([]);

  const openModal = () => {
    setIsModalOpen(true);
  };

  const closeModal = () => {
    setIsModalOpen(false);
  };

  const toggleNotes = () => {
    setIsNotesOpen(!isNotesOpen);
  };

  const Save = () => {

    async function saveShareClasses() {
      const submitData = {      
        name,
        nominalPrice,
        Note: note
      }
        console.log(submitData);
      try {
        const response = await fetch('/api/shareclasses',{
          method: 'POST',
          body: JSON.stringify(submitData),
          headers: {
            'content-type': 'application/json'
          }
        })
        console.log(response);
  
        if(response.ok){
          window.location.href="/shareclasses";
        }else{
          console.log("Failed");
        }
      }
      catch (error){
          console.log(error);
      }  
    }
    saveShareClasses();
  }

  useEffect(() => {
    async function fetchData() {
        try {
            const response = await fetch('/api/shareclasses/get');
            const data = await response.json();
            setShareClasses(data);
            console.log(data);

        } catch (error) {
            console.error('Veri getirme hatasƒ±:', error);
        }
    }

    fetchData();
}, []);


  return (
    <div className={styles.container}>
      <Head>
        <title>Share Classes Page</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <main className={styles.main}>
        <div className={styles.header}>
          <h1>Share Classes</h1>
          <button className={styles.addButton} onClick={openModal}>+ ADD SHARE CLASS</button>
        </div>

        <div className={styles.table}>
          <div className={`${styles.tableRow} ${styles.tableHeader}`}>
            <div className={styles.tableCell}>NAME</div>
            <div className={styles.tableCell}>RIGHTS</div>
            <div className={styles.tableCell}>SENIORITY</div>
            <div className={styles.tableCell}>NOTES</div>
            <div className={styles.tableCell}></div>
          </div>

{shareClasses.map((item,index) => {

  return(
          <div key={index} className={styles.tableRow}>
            <div className={styles.tableCell}>{item.name}</div>
            <div className={styles.tableCell}>
              <div>‚úì voting</div>
              <div>‚úì dividend</div>
              <div>‚úó no liquidation preference</div>
              <div>‚úó no anti-dilution</div>
              <div>‚úó no hurdle</div>
            </div>
            <div className={styles.tableCell}>--</div>
            <div className={styles.tableCell}>--</div>
            <div className={styles.tableCell}>
              <button className={styles.iconButton}>‚úèÔ∏è</button>
              <button className={styles.iconButton}>üóëÔ∏è</button>
            </div>
          </div>
  );
})}
          
        </div>

        {isModalOpen && (
          <div className={styles.modalOverlay}>
            <div className={styles.modal}>
              <button className={styles.closeButton} onClick={closeModal}>√ó</button>
              <h3>Share class</h3>
              <form>
                <input className={styles.input} type="text" placeholder="Name" value={name} onChange={(e) => setName(e.target.value)} />
                <input className={styles.input} type="text" value={nominalPrice} onChange={(e) => setNominalPrice(e.target.value)} placeholder="Nominal share price" />
                <div className={styles.checkboxContainer}>
                  <label><input type="checkbox" /> Voting rights</label>
                  <label><input type="checkbox" /> Dividend rights</label>
                  <label><input type="checkbox" /> Liquidation Preference</label>
                  <label><input type="checkbox" /> Anti-dilution</label>
                  <label><input type="checkbox" /> Tax value</label>
                  <label><input type="checkbox" /> Hurdle</label>
                  <label><input type="checkbox" /> Issue certificates</label>
                </div>
                <div>
                  <button type="button" className={styles.notesToggle} onClick={toggleNotes}>
                    NOTES {isNotesOpen ? '‚ñ≤' : '‚ñº'}
                  </button>
                  {isNotesOpen && (
                    <textarea className={styles.textarea} value={note} onChange={(e) => setNote(e.target.value)} placeholder="Notes"></textarea>
                  )}
                </div>
                <div className={styles.buttonContainer}>
                  <button type="button" className={styles.button} onClick={closeModal}>CLOSE</button>
                  <button type="button" className={styles.button} onClick={Save}>SAVE</button>
                </div>
              </form>
            </div>
          </div>
        )}
      </main>
    </div>
  );
}

